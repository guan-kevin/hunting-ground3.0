name: Main
on: [push, pull_request]

jobs:
  test:
      name: Test
      runs-on: ubuntu-latest
      strategy:
        matrix:
#           pair: [{first: hello, second: world}, {first: hola, second: mundo}]
#           version: [[a, b], [A, B]]
#           pair_str: [{first: "hello", second: "world"}, {first: "hola", second: "mundo"}]
          version_dict: [[{version1: [0, one], version2: {attribute1: true, attribute2: 3}},{version1: [4, five], version2: {attribute1: false, attribute2: 7}}],[{version1: [8, nine], version2: {attribute1: true, attribute2: 11}},{version1: [12, thirteen], version2: {attribute1: false, attribute2: 15}}]]
      steps:
        - uses: actions/checkout@v2
        - run: python test.py
#         - run: |
#             echo "$first vs ${{ env.first }}"
#             echo "$second vs ${{ env.second }}" 
#           env: ${{ matrix.pair  }}
#         - run: |
#             echo "$A vs ${{ env.A }} vs ${{ matrix.pair.first }}"
#             echo "$B vs ${{ env.B }} vs ${{ matrix.pair.second }}"
#           env:
#             A: ${{ matrix.pair.first }}
#             B: ${{ matrix.pair.second }}
#         - run: |
#             echo "$first vs ${{ env.first }}"
#             echo "$second vs ${{ env.second }}"
#           env: ${{ matrix.pair_str  }}
#         - run: |
#             echo "$A vs ${{ env.A }} vs ${{ matrix.pair_str.first }}"
#             echo "$B vs ${{ env.B }} vs ${{ matrix.pair_str.second }}"
#           env:
#             A: ${{ matrix.pair_str.first }}
#             B: ${{ matrix.pair_str.second }}
#         - run: |
#             echo "${{ matrix.version[0] }} and ${{ matrix.version[1] }}"
        - run: |
            echo "${{ matrix.version_dict[0].version1[0] }}, ${{ matrix.version_dict[0].version1[1] }}, ${{ matrix.version_dict[0].version2.attribute1 }}, ${{ matrix.version_dict[0].version2.attribute2 }}"
            echo "${{ matrix.version_dict[1].version1[0] }}, ${{ matrix.version_dict[1].version1[1] }}, ${{ matrix.version_dict[1].version2.attribute1 }}, ${{ matrix.version_dict[1].version2.attribute2 }}"

# jobs:
#   env_test:
#       name: Test Env
#       runs-on: ubuntu-latest
#       env:
#         tESt: tESt
#       steps:
#         - uses: actions/checkout@v2
#         - uses: actions/setup-python@v4
#           with:
#             python-version: '3.11' 
#         - run: python test.py
#         - run: |
#             echo "hello=hello" >> $GITHUB_ENV
#             echo "HELLO=HELLO" >> $GITHUB_ENV
#             echo "heLLo=heLLO" >> $GITHUB_ENV
            
#             echo 'bye<<@' >> $GITHUB_ENV
#             echo 'bye' >> $GITHUB_ENV
#             echo '@' >> $GITHUB_ENV
            
#             echo 'BYE<<@' >> $GITHUB_ENV
#             echo 'BYE' >> $GITHUB_ENV
#             echo '@' >> $GITHUB_ENV
            
#             echo 'bYe<<@' >> $GITHUB_ENV
#             echo 'bYe' >> $GITHUB_ENV
#             echo '@' >> $GITHUB_ENV
#         - run: |
#             echo $hello
#             echo $HELLO
#             echo $heLLo
#             echo "${{ env.hello }}"
#             echo "${{ env.HELLO }}"
#             echo "${{ env.heLLo }}"
            
#             echo $world
#             echo $WORLD
#             echo $woRLd
#             echo "${{ env.world }}"
#             echo "${{ env.WORLD }}"
#             echo "${{ env.woRLd }}"
            
#             echo $bye
#             echo $BYE
#             echo $bYe
#             echo "${{ env.bye }}"
#             echo "${{ env.BYE }}"
#             echo "${{ env.bYe }}"
            
#             echo $test
#             echo $TEST
#             echo $tESt
#             echo "${{ env.test }}"
#             echo "${{ env.TEST }}"
#             echo "${{ env.tESt }}"
#           env:
#             woRLd: woRLd
  
#   build0:
#     name: Build v0
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - run: |
#           echo "version=$(cat python_version.txt)" >> $GITHUB_ENV
#       - uses: actions/setup-python@v4
#         with:
#           python-version: '${{ env.version }}' 
#       - run: python test.py

#   build1:
#     name: Build v1
#     runs-on: ubuntu-latest
#     container: ''
#     steps:
#       - uses: actions/checkout@v2
#       - run: |
#           echo "version=$(cat python_version.txt)" >> $GITHUB_ENV
#       - uses: actions/setup-python@v4
#         with:
#           python-version: '${{ env.version }}' 
#       - run: python test.py

#   build2:
#       name: Build v2
#       runs-on: ubuntu-latest
#       container: 'python:3.11'
#       steps:
#         - uses: actions/checkout@v2
#         - run: python test.py
